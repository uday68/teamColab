version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pulsecollab-db
    environment:
      POSTGRES_DB: pulsecollab
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./pulsecollab_backend/database/db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - pulsecollab-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: pulsecollab-redis
    ports:
      - "6379:6379"
    networks:
      - pulsecollab-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend-build
    container_name: pulsecollab-backend
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=pulsecollab
      - DB_USER=postgres
      - DB_PASSWORD=password123
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - REFRESH_TOKEN_SECRET=your-super-secret-refresh-token-key
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USER=your-email@gmail.com
      - EMAIL_PASS=your-email-password
      - GOOGLE_CLIENT_ID=your-google-client-id
      - GOOGLE_CLIENT_SECRET=your-google-client-secret
      - GITHUB_CLIENT_ID=your-github-client-id
      - GITHUB_CLIENT_SECRET=your-github-client-secret
      - MICROSOFT_CLIENT_ID=your-microsoft-client-id
      - MICROSOFT_CLIENT_SECRET=your-microsoft-client-secret
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - pulsecollab-network
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: pulsecollab-frontend
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://localhost:3001/api
      - VITE_WS_URL=ws://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - pulsecollab-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: pulsecollab-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - pulsecollab-network

volumes:
  postgres_data:
    driver: local

networks:
  pulsecollab-network:
    driver: bridge
